model1_CRC <- dat_CRC[LogicModel_CRC[[1]],]
model2_CRC <- dat_CRC[LogicModel_CRC[[2]],]
## CRC Logic Model
LogicModel_CRC <- list(7, c(6,9))   # 7 | (6 & 9)
dat_CRC <- read.table('~/LOBICO/data/long.random.forest.any/Bi-Normal-CRC.txt')
class_CRC <- read.table('~/LOBICO/data/long.random.forest.any/Normal-CRC-biclass.txt')
model1_CRC <- dat_CRC[LogicModel_CRC[[1]],]
model2_CRC <- dat_CRC[LogicModel_CRC[[2]],]
results_CRC <- (model1_CRC) | (model2_CRC[1,] | model2_CRC[2,])
p <- table(results_CRC, class_CRC)
accuracy_CRC <- (p[1,1] + p[2,2])/nrow(class_CRC)
accuracy_CRC
results_CRC
View(class_CRC)
class_CRC <- read.table('~/LOBICO/data/long.random.forest.any/Normal-CRC-biclass.txt', header = F, col.names = 0)
View(class_CRC)
class_CRC <- as.vector(read.table('~/LOBICO/data/long.random.forest.any/Normal-CRC-biclass.txt'))
View(class_CRC)
View(results_CRC)
p <- table(results_CRC, class_CRC)
class_CRC <- read.table('~/LOBICO/data/long.random.forest.any/Normal-CRC-biclass.txt')
## CRC Logic Model
p <- table(results_CRC, t(class_CRC))
accuracy_CRC <- (p[1,1] + p[2,2])/nrow(class_CRC)
accuracy_CRC
## HCC Logic Model
LogicModel_HCC <- list(c(3,6))      # ~3 & ~6
dat_HCC <- read.table('~/LOBICO/data/long.random.forest.any/Bi-Normal-HCC.txt')
class_HCC <- read.table('~/LOBICO/data/long.random.forest.any/Normal-HCC-biclass.txt')
model1 <- dat_HCC[LogicModel_CRC[[1]],]
model1_HCC <- dat_HCC[LogicModel_CRC[[1]],]
results_HCC <- (!model2_CRC[1,]) & (!model1_CRC[2,])
p <- table(results_CRC, t(class_CRC))
accuracy_CRC <- (p[1,1] + p[2,2])/nrow(class_CRC)
accuracy_CRC
table_CRC <- table(results_CRC, t(class_CRC))
accuracy_CRC <- (table_CRC[1,1] + table_CRC[2,2])/nrow(class_CRC)
accuracy_CRC
table_HCC <- table(results_CRC, t(class_CRC))
accuracy_HCC <- (table_HCC[1,1] + table_HCC[2,2])/nrow(class_HCC)
accuracy_HCC
View(dat_HCC)
normal_HCC <- read.table("~/LOBICO/data/long.random.forest.any/cpm_selected_features.Normal-HCC.txt",
sep = '\t', header = T, row.names = 1)
heatmap(as.matrix(normal_HCC))
View(dat_CRC)
rownames(dat_CRC)[LogicModel_CRC]
rownames(dat_CRC)[LogicModel_CRC[[1]], LogicModel_CRC[[2]]]
rownames(dat_CRC)[c(LogicModel_CRC[[1]], LogicModel_CRC[[2]])]
rownames(dat_HCC)[LogicModel_CRC[[1]]]
rownames(dat_HCC)[LogicModel_HCC[[1]]]
table_HCC
View(results_HCC)
results_HCC <- (!model2_CRC[1,]) & (!model1_CRC[2,])
table_HCC <- table(results_HCC, t(class_HCC))
results_HCC <- (!model1_CRC[1,]) & (!model1_CRC[2,])
table_HCC <- table(results_HCC, t(class_HCC))
results_HCC <- (!model1_HCC[1,]) & (!model1_HCC[2,])
model1_HCC
dat_HCC <- read.table('~/LOBICO/data/long.random.forest.any/Bi-Normal-HCC.txt')
class_HCC <- read.table('~/LOBICO/data/long.random.forest.any/Normal-HCC-biclass.txt')
model1 <- dat_HCC[LogicModel_HCC[[1]],]
model1_HCC <- dat_HCC[LogicModel_HCC[[1]],]
results_HCC <- (!model1_HCC[1,]) & (!model1_HCC[2,])
table_HCC <- table(results_HCC, t(class_HCC))
accuracy_HCC <- (table_HCC[1,1] + table_HCC[2,2])/nrow(class_HCC)
accuracy_HCC
rownames(dat_HCC)[LogicModel_HCC[[1]]]
accuracy_CRC
source('~/LOBICO/plot/long.random.forest.any/plot.R', echo=TRUE)
normal_CRC_S1 <- read.table("~/LOBICO/data/short.random.forest.any/selected_feature_cpm_Normal-CRC_S1.txt",
sep = '\t', header = T, row.names = 1)
normal_CRC <- read.table("~/LOBICO/data/short.random.forest.any/selected_feature_cpm_Normal-CRC.txt",
sep = '\t', header = T, row.names = 1)
normal_HCC <- read.table("~/LOBICO/data/short.random.forest.any/selected_feature_cpm_Normal-HCC.txt",
sep = '\t', header = T, row.names = 1)
normal_PRAD <- read.table("~/LOBICO/data/short.random.forest.any/selected_feature_cpm_Normal-PRAD.txt",
sep = '\t', header = T, row.names = 1)
normal_PAAD <- read.table("~/LOBICO/data/short.random.forest.any/selected_feature_cpm_Normal-PAAD.txt",
sep = '\t', header = T, row.names = 1)
View(normal_CRC)
## Normal-CRC part
bi_normal_CRC <- normal_CRC
library(dplyr)
bi_normal_CRC <- t(bi_normal_CRC)
View(bi_normal_CRC)
bi_normal_CRC$names <- rownames(bi_normal_CRC)
View(bi_normal_CRC)
## Normal-CRC part
bi_normal_CRC <- normal_CRC
bi_normal_CRC <- t(bi_normal_CRC)
## Normal-CRC part
bi_normal_CRC <- normal_CRC
bi_normal_CRC <- as.data.frame(t(bi_normal_CRC))
bi_normal_CRC$names <- rownames(bi_normal_CRC)
View(bi_normal_CRC)
bi_normal_CRC <- arrange(bi_normal_CRC, names)
View(bi_normal_CRC)
View(normal_CRC)
View(bi_normal_CRC)
rownames(bi_normal_CRC) <- bi_normal_CRC$names
View(bi_normal_CRC)
bi_normal_CRC <- bi_normal_CRC[,-11]
View(bi_normal_CRC)
## Normal-CRC part
bi_normal_CRC <- normal_CRC
bi_normal_CRC <- as.data.frame(t(bi_normal_CRC))
bi_normal_CRC$names <- rownames(bi_normal_CRC)
bi_normal_CRC <- arrange(bi_normal_CRC, names)
rownames(bi_normal_CRC) <- bi_normal_CRC$names
bi_normal_CRC <- as.data.frame(t(bi_normal_CRC[,-11]))
View(bi_normal_CRC)
View(normal_CRC)
a = nrow(bi_normal_CRC)
b = ncol(bi_normal_CRC)
for(i in 1:a){
temp <- sum(normal_CRC[i,])/a + sd(normal_CRC[i,])
for(j in 1:b){
if(normal_CRC[i,j] >= temp){
bi_normal_CRC[i,j] <- 1
}
else{
bi_normal_CRC[i,j] <- 0
}
}
}
write.table(bi_normal_CRC, "~/LOBICO/data/short.random.forest.any/Bi-Normal-CRC.txt",
sep = "\t", row.names = T, col.names = T)
View(bi_normal_CRC)
normal_CRC_class <- c(rep(1, times = 100), rep(0, times = 50))
write.table(normal_CRC_class, "~/LOBICO/data/long.random.forest.down/Normal-CRC-biclass.txt",
sep = "\t", row.names = F, col.names = F)
View(normal_CRC_S1)
## Normal-CRC_S1 part
bi_normal_CRC_S1 <- normal_CRC_S1
bi_normal_CRC_S1 <- as.data.frame(t(bi_normal_CRC_S1))
bi_normal_CRC_S1$names <- rownames(bi_normal_CRC_S1)
bi_normal_CRC_S1 <- arrange(bi_normal_CRC_S1, names)
rownames(bi_normal_CRC_S1) <- bi_normal_CRC_S1$names
bi_normal_CRC_S1 <- as.data.frame(t(bi_normal_CRC_S1[,-11]))
View(bi_normal_CRC_S1)
a = nrow(bi_normal_CRC_S1)
b = ncol(bi_normal_CRC_S1)
for(i in 1:a){
temp <- sum(normal_CRC_S1[i,])/a + sd(normal_CRC_S1[i,])
for(j in 1:b){
if(normal_CRC_S1[i,j] >= temp){
bi_normal_CRC_S1[i,j] <- 1
}
else{
bi_normal_CRC_S1[i,j] <- 0
}
}
}
write.table(bi_normal_CRC_S1, "~/LOBICO/data/short.random.forest.any/Bi-Normal-CRC_S1.txt",
sep = "\t", row.names = T, col.names = T)
normal_HCC_class <- c(rep(1, times = 25), rep(0, times = 50))
write.table(normal_CRC_S1_class, "~/LOBICO/data/short.random.forest.any/Normal-CRC_S1-biclass.txt",
sep = "\t", row.names = F, col.names = F)
normal_CRC_S1_class <- c(rep(1, times = 25), rep(0, times = 50))
write.table(normal_CRC_S1_class, "~/LOBICO/data/short.random.forest.any/Normal-CRC_S1-biclass.txt",
sep = "\t", row.names = F, col.names = F)
View(normal_PAAD)
## Normal-PAAD part
bi_normal_PAAD <- normal_PAAD
bi_normal_PAAD <- as.data.frame(t(bi_normal_PAAD))
bi_normal_PAAD$names <- rownames(bi_normal_PAAD)
bi_normal_PAAD <- arrange(bi_normal_PAAD, names)
rownames(bi_normal_PAAD) <- bi_normal_PAAD$names
bi_normal_PAAD <- as.data.frame(t(bi_normal_PAAD[,-11]))
View(bi_normal_PAAD)
a = nrow(bi_normal_PAAD)
b = ncol(bi_normal_PAAD)
for(i in 1:a){
temp <- sum(normal_PAAD[i,])/a + sd(normal_PAAD[i,])
for(j in 1:b){
if(normal_PAAD[i,j] >= temp){
bi_normal_PAAD[i,j] <- 1
}
else{
bi_normal_PAAD[i,j] <- 0
}
}
}
write.table(bi_normal_PAAD, "~/LOBICO/data/long.random.forest.down/Bi-Normal-PAAD.txt",
sep = "\t", row.names = T, col.names = T)
normal_PAAD_class <- c(rep(0, times = 50), rep(1, times = 36))
write.table(bi_normal_PAAD, "~/LOBICO/data/short.random.forest.any/Bi-Normal-PAAD.txt",
sep = "\t", row.names = T, col.names = T)
normal_PAAD_class <- c(rep(0, times = 50), rep(1, times = 36))
write.table(normal_PAAD_class, "~/LOBICO/data/short.random.forest.any/Normal-PAAD-biclass.txt",
sep = "\t", row.names = F, col.names = F)
